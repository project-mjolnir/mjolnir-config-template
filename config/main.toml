# Shared static system configuration

config_version = 1

[general]
    # The default pipeline to use when running the brokkr status and brokkr monitor commands
    monitoring_pipeline_default = "monitor"
    # The value to use to designate NA values when data is serialized
    na_marker = "NA"
    # How to format the output filename on the client.
    # Items in {} are replaced with their corresponding value
    output_filename_client = "{output_type}_{system_prefix}_{unit_number:0>4}_{utc_date!s}"
    # The path the client should use when storing output data files
    output_path_client = "~/brokkr/{system_name}"
    # How long to wait for the workers to shut down after sending the command
    worker_shutdown_wait_s = 10

# Include this section if using the built-in AutoSSH functionality for remote access and data upload.
# It can be ignored if you are using a different network uplink method not requiring SSH.
#[autossh]
    # Hostname of the server to connect to
    #server_hostname = "example.com"
    # Username to use on the server
    #server_username = "exampleuser"
    # Base offset to the tunnel port to expose on the server (port = offset + unit_number)
    #tunnel_port_offset = 10000

# Custom data types, adding to or overriding those defined in the presets
[data_types]
    example_current = { binary_type = "f", conversion = "eval", expression = "(int(value * 16) & 0b0111) ** 2", unit = "A", uncertainty = 0.5, digits = 3 }

# List custom steps or override default preset settings here under the [steps] key
[steps]
    [steps.monitor_csv_output]
        # Preset for this step, in the format "{device_name}.{input/output/command/etc}.{preset_name}"
        _preset = "builtins.outputs.csv_file"
        # Step name, for use in UI text and log messages
        name = "Monitoring CSV Output"
        # Step-specific settings; here lists the output path and filename kwargs
        output_path = "monitoring"
        filename_kwargs = { output_type = "monitoring" }

    [steps.monitor_repr_output]
        # Preset for this step, in the format "{device_name}.{input/output/command/etc}.{preset_name}"
        _preset = "example_output.outputs.repr_file"
        _enabled = false
        name = "Monitoring Repr Output"
        output_path = "monitoring"
        filename_kwargs = { output_type = "monitoring" }

    [steps.minimal_csv_output]
        _preset = "builtins.outputs.csv_file"
        name = "Minimal CSV Output"
        output_path = "monitoring"
        filename_kwargs = { output_type = "minimal" }

    [steps.plugin_input_custom]
        _preset = "example_input.inputs.plugin"
        data_types = [
            "example_volts",
            "example_current",
            "example_time",
            "example_str",
            "example_bool",
        ]

    [steps.ping_input_2]
        _preset = "example_input.inputs.ping"
        name_suffix = "_badhost"
        host = "0.0.0.0"

# List pipelines to run here under the [pipelines] key
[pipelines]
    [pipelines.monitor]
        # Custom builder for this pipeline, e.g. a streamlined builder for monitoring pipelines
        _builder = "monitor"
        # Name of this pipeline for UI text and log messages
        name = "Monitoring"
        # Custom settings for this pipeline type: here, the interval in s to run monitoring
        monitor_interval_s = 10
        # Whether to inject NAs when starting, so that jumps in data continuity are apparent
        na_on_start = false
        # Most pipeline builders will need one or more lists of steps.
        # These are either names of steps in the [steps] table, or preset names as above
        monitor_input_steps = [
            "builtins.inputs.current_time",
            "builtins.inputs.run_time",
            "example_input.inputs.ping",
            "plugin_input_custom",
            "ping_input_2",
            "example_input_minimal.inputs.plugin",
            "example_input_sensor.inputs.sensor_property",
        ]
        monitor_process_steps = [
            "example_transform.transforms.plugin"
        ]
        monitor_output_steps = [
            "monitor_csv_output",
            "monitor_repr_output",
        ]

    [pipelines.minimal]
        _enabled = false
        _builder = "monitor"
        name = "Minimal"
        monitor_interval_s = 10
        monitor_input_steps = ["builtins.inputs.current_time", "builtins.inputs.run_time"]
        monitor_output_steps = ["minimal_csv_output"]
